language: objective-c
osx_image: xcode10.1

branches:
  only:
    - master
    - develop
#    - "/^v?[0-9\\.]+/"

#cache:
#  directories:
#    - Carthage
#    - Pods

env:
  global:
    - XCODEPROJ="CallStackParser.xcodeproj"
    - IOS_SCHEME="CallStackParser-iOS"
    - TVOS_SCHEME="CallStackParser-tvOS"
    - MACOS_SCHEME="CallStackParser-macOS"

matrix:
  include:
    # iOS Tests
    - os: osx
      env: DESTINATION="OS=12.1,name=iPhone X" SCHEME="$IOS_SCHEME" RUN_TESTS="YES" LINT="YES" COVERAGE="YES" CODECOV_FLAG="ios12"
    - os: osx
      env: DESTINATION="OS=11.4,name=iPhone 7 Plus" SCHEME="$IOS_SCHEME" RUN_TESTS="YES" LINT="NO" COVERAGE="NO"
    - os: osx
      env: DESTINATION="OS=10.3.1,name=iPhone 6" SCHEME="$IOS_SCHEME" RUN_TESTS="YES" LINT="NO" COVERAGE="NO"
    - os: osx
      env: DESTINATION="OS=9.3,name=iPhone 5s" SCHEME="$IOS_SCHEME" RUN_TESTS="YES" LINT="NO" COVERAGE="NO"

    # tvOS Tests
    - os: osx
      env: DESTINATION="OS=12.1,name=Apple TV 4K" SCHEME="$TVOS_SCHEME" RUN_TESTS="YES" LINT="NO" COVERAGE="NO"
    - os: osx
      env: DESTINATION="OS=11.4,name=Apple TV 4K" SCHEME="$TVOS_SCHEME" RUN_TESTS="YES" LINT="NO" COVERAGE="NO"
    - os: osx
      env: DESTINATION="OS=10.2,name=Apple TV 1080p" SCHEME="$TVOS_SCHEME" RUN_TESTS="YES" LINT="NO" COVERAGE="NO"
    - os: osx
      env: DESTINATION="OS=9.2,name=Apple TV 1080p" SCHEME="$TVOS_SCHEME" RUN_TESTS="YES" LINT="NO" COVERAGE="NO"

    # macOS Tests
    - os: osx
      env: DESTINATION="arch=x86_64" SCHEME="$MACOS_SCHEME" RUN_TESTS="YES" LINT="NO" COVERAGE="NO"

before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    gem install xcpretty -N --no-ri --no-rdoc;
    gem install cocoapods --pre --no-rdoc --no-ri --no-document;
    brew update;
    brew outdated carthage || brew upgrade carthage;
    fi

install:
  - ./install-swiftlint.sh;

script:
  - set -o pipefail;
  - swift -version;

  - xcrun simctl list;
  - xcodebuild -version;
  - xcodebuild -showsdks;
  - xcodebuild -list;

  - if [ "$RUN_TESTS" == "YES" ]; then
    xcodebuild clean test -project "$XCODEPROJ" -scheme "$SCHEME" -destination "$DESTINATION" -enableCodeCoverage YES | xcpretty -c;
    elif [ "$RUN_TESTS" == "NO" ]; then
    xcodebuild clean build -project "$XCODEPROJ" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release | xcpretty -c;
    fi

  - if [ "$LINT" == "YES" ]; then
    swiftlint;
    carthage build --no-skip-current;
    pod lib lint --verbose;
    fi

after_success:
  - if [ "$COVERAGE" == "YES" ]; then
    bash <(curl -s https://codecov.io/bash) -J 'CallStackParser' -cF "$CODECOV_FLAG" -y ".codecov.yml";
    fi

notifications:
  email: false